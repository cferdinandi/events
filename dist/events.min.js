/*! events v1.0.0 | (c) 2019 Chris Ferdinandi | MIT License | http://github.com/cferdinandi/events */
!(function(e,n){"function"==typeof define&&define.amd?define([],(function(){return n(e)})):"object"==typeof exports?module.exports=n(e):e.events=n(e)})("undefined"!=typeof global?global:"undefined"!=typeof window?window:this,(function(i){"use strict";var e={},c={},f=function(o){c[o.type]&&c[o.type].forEach((function(e){var n,t;(n=o.target,t=e.selector,-1<[i,document,document.documentElement].indexOf(t)||("string"!=typeof t&&t.contains?t.contains(n):n.closest(t)))&&e.callback(o)}))};return e.on=function(e,n,t){n&&t&&e.split(" ").forEach((function(e){c[e]||(c[e]=[],i.addEventListener(e,f,!0)),c[e].push({selector:n,callback:t})}))},e.off=function(e,t,o){e.split(" ").forEach((function(e){if(c[e]){if(c[e].length<2||!t)return delete c[e],void i.removeEventListener(e,f,!0);var n=(function(e,n,t){for(var o=0;o<e.length;o++)if(e[o].selector===n&&e[o].callback.toString()===t.toString())return o;return-1})(c[e],t,o);n<0||c[e].splice(n,1)}}))},e}));